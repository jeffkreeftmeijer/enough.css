#+title: enough.css
#+html_doctype: html5
#+options: toc:nil num:nil html-style:nil html-postamble:nil
#+html_head: <link rel="stylesheet" href="enough.css"/>
#+html_head: <link rel="stylesheet" href="enough.code.css"/>
#+html_head: <link rel="stylesheet" href="enough.table.css"/>

enough.css is a tiny CSS framework with most of the styling you need for that blog of yours.

#+begin_quote
  Websites aren't broken by default, they are functional, high-performing, and accessible. You break them. --- [[http://motherfuckingwebsite.com]]
#+end_quote

The base stylesheet is *118 bytes* minified. It comes with optional modules to (minimally) style code blocks and tables. It's responsive by default, but has a module to decrease font sizes on smaller screens for extra responsiveness. The whole package is *478 bytes* minified.

[[https://jeffkreeftmeijer.github.io/enough.css/][file:./screenshot.png]]

It's an experiment to see how little CSS a blog can get away with while still looking good and being readable on big and small screens. It styles pages without having to add extra markup like wrapper =<div>=​s and CSS classes.

Besides the base style sheet, it comes modules for styling specific tags. These are included in =enough.min.css= by default, but you can build your own to save some bytes if your project doesn't need everything.

Some of the rules are duplicated across modules so they don't depend on each other, but [[https://cssnano.co][cssnano]] takes them out when minifying.

** enough.css
   :PROPERTIES:
   :CUSTOM_ID: enough.css-1
   :END:

* Font

Most, if not all, browsers default to /Times New Roman/ as the typeface, with a font size of 16 pixels and a line height of 125 %.
Enough.css produces larger, responsive text in a modern typeface, with more spacing between lines:

#+headers: :tangle enough.css
#+begin_src css
  html{
    font: clamp(16px, 2.2vw, 22px)/1.5 system-ui, sans-serif;
  }
#+end_src

Smaller font sizes are great for 14″ monitors with low resolutions, but produce text that's uncomfortable to read on modern displays.
Enough.css uses CSS's =clamp()= function to produce a font size that matches 2.2% of the viewport width with a 16-pixel minimum and a 22 pixel maximum.
In practice, this means a 16 pixel font size for phones, maximum screen usage on tablets and a responsive font size that's configurable by resizing the window on desktop.

The preferred font family is /system-ui/, which points to the operating system's default font.
This produces text in Apple's /San Fransisco/ font on macOS and iOS, and falls back to a sans-serif font on other platforms.

Finally, the line height is 150 %, producing a 33 pixel line height for 22 pixel body text.

* Body width and padding

Enough.css adds a maximum width to pages to keep lines from running too long, with padding that ensures there's always some space between the text and the sides of the page, even if the window is resized:

#+headers: :tangle enough.css
#+begin_src css
  body{
    margin: auto;
    padding: 0 2em;
    max-width: 40em;
  }
#+end_src

A 40 em page width produces an 880-pixel wide page if for a 22 pixel font size, fitting around 85 characters per line.
A 2 em padding is added to the sides, which produces 44 pixels on each size for a 22 pixel font size, which are added to the page's width.

If the window is wider than 968 pixels, the side paddings increase to keep the body in the center of the window.
If the window is narrower, the body also becomes narrower.
The padding remains at 2 em, but reduces in size because of responsive font sizing.

* Image and video widths

To keep images and video tags from overflowing and producing horizontal scroll bars, enough.css caps their widths to 100 % of the body width:

#+headers: :tangle enough.css
#+begin_src css
  img, video{
    max-width: 100%;
    height: auto;
  }
#+end_src

Doing this automatically scales images and videos down to fit the page.
Setting an automatic height makes sure the images or videos keep their aspect ratio, even if they're resized.

* Code


#+headers: :tangle enough.code.css
#+begin_src css
  code,kbd,pre{
      font-family: ui-monospace, SFMono-Regular, Monaco, monospace;
  }

  pre{
      font-size: smaller;
      overflow: auto;
  }
#+end_src

- Uses a =smaller= font-size in =<pre>= tags
- Uses =ui-monospace= (which is SF Mono on [[https://caniuse.com/extended-system-fonts][Safari ≥ 13.1]]), =SFMono-Regular= (SF Mono on Chrome) or Monaco as the font in =<pre>=, =<code>=, and =<kbd>= tags, or falls back to the system's monospace font
- Adds an overflow to =<pre>= tags so long lines show horizontal scroll bars

** enough.table.css
   :PROPERTIES:
   :CUSTOM_ID: enough.table.css
   :END:

#+headers: :tangle enough.table.css
#+begin_src css
  table{
    border-collapse: collapse;
    width: 100%;
  }
  
  td, th{
    padding: 0.5em;
    border: 1px solid;
  }
#+end_src

- Adds a 100% =width= to tables.
- Uses a 0.5em padding in table cells
- Adds collapsed, 1px borders

** enough.min.css
   :PROPERTIES:
   :CUSTOM_ID: enough.min.css
   :END:

#+begin_src shell :prologue npm install > /dev/null
  cat enough.css enough.code.css enough.table.css | node_modules/.bin/cssnano > enough.min.css
#+end_src

#+RESULTS:

--------------

- [[https://jeffkreeftmeijer.github.io/enough.css][Interactive Demo™]]
- [[https://github.com/jeffkreeftmeijer/enough.css][Code]]
